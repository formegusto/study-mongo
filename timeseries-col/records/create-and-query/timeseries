test> use timeseries
switched to db timeseries
timeseries> db.weather.insertMany( [
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-18T00:00:00.000Z"),
...       "temp": 12
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-18T04:00:00.000Z"),
...       "temp": 11
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-18T08:00:00.000Z"),
...       "temp": 11
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-18T12:00:00.000Z"),
...       "temp": 12
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-18T16:00:00.000Z"),
...       "temp": 16
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-18T20:00:00.000Z"),
...       "temp": 15
...    }, {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-19T00:00:00.000Z"),
...       "temp": 13
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-19T04:00:00.000Z"),
...       "temp": 12
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-19T08:00:00.000Z"),
...       "temp": 11
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-19T12:00:00.000Z"),
...       "temp": 12
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-19T16:00:00.000Z"),
...       "temp": 17
...    },
...    {
...       "metadata": { "sensorId": 5578, "type": "temperature" },
...       "timestamp": ISODate("2021-05-19T20:00:00.000Z"),
...       "temp": 12
...    }
... ] )
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64f780f7cf11a5ceee5e326c"),
    '1': ObjectId("64f780f7cf11a5ceee5e326d"),
    '2': ObjectId("64f780f7cf11a5ceee5e326e"),
    '3': ObjectId("64f780f7cf11a5ceee5e326f"),
    '4': ObjectId("64f780f7cf11a5ceee5e3270"),
    '5': ObjectId("64f780f7cf11a5ceee5e3271"),
    '6': ObjectId("64f780f7cf11a5ceee5e3272"),
    '7': ObjectId("64f780f7cf11a5ceee5e3273"),
    '8': ObjectId("64f780f7cf11a5ceee5e3274"),
    '9': ObjectId("64f780f7cf11a5ceee5e3275"),
    '10': ObjectId("64f780f7cf11a5ceee5e3276"),
    '11': ObjectId("64f780f7cf11a5ceee5e3277")
  }
}
timeseries> db.weather.findOne({
...    "timestamp": ISODate("2021-05-18T00:00:00.000Z")
... })
{
  timestamp: ISODate("2021-05-18T00:00:00.000Z"),
  metadata: { sensorId: 5578, type: 'temperature' },
  _id: ObjectId("64f780f7cf11a5ceee5e326c"),
  temp: 12
}
timeseries> db.weather.aggregate( [
...    {
...       $project: {
...          date: {
...             $dateToParts: { date: "$timestamp" }
...          },
...          temp: 1
...       }
...    },
...    {
...       $group: {
...          _id: {
...             date: {
...                year: "$date.year",
...                month: "$date.month",
...                day: "$date.day"
...             }
...          },
...          avgTmp: { $avg: "$temp" }
...       }
...    }
... ] )
[
  {
    _id: { date: { year: 2021, month: 5, day: 18 } },
    avgTmp: 12.833333333333334
  },
  {
    _id: { date: { year: 2021, month: 5, day: 19 } },
    avgTmp: 12.833333333333334
  }
]